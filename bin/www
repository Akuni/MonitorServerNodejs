var express = require('express');
var app = express();
var promisedEJS = require('promised-ejs');
var cron = require('node-cron');
var db = require('./dbmanager');

 
var task = cron.schedule('* * * * *', function(){
  console.log('running a task every 1 minute');
  exec(cmdTemp, function(error, stdout, stderr) {
        var newTemp = {value:stdout, timestamp:new Date().getTime()};
        console.log(html);
        db.temp.add(newTemp, function(result){
          if(!result){
            console.log("couldn't store in the database");
          }
        });
    });
}, false);

// set the view engine to ejs
app.set('views', __dirname + '/views');

app.engine('ejs', promisedEJS.__express);
app.set('view engine', 'ejs');

//var aejs = require('async-ejs').add(exec,require('child_process').exec);
var exec = require('child_process').exec;
var cmdStatus = 'mscs status spigot';
var cmdTemp = 'vcgencmd measure_temp';

var port = 8080;

var promStatus = new Promise((resolve, reject) => {
    exec(cmdStatus, function(error, stdout, stderr) {
        var html = '<table style="border: 1px solid black"><tr style="border: 1px solid black"><td style="border: 1px solid black"><b> Server </b></td><td style="border: 1px solid black"><b> Status </b></td></tr><tr style="border: 1px solid black"><td style="border: 1px solid black"> Spigot </td><td style="border: 1px solid black">';
        if(stdout.includes('1.11.2')){
            html += '<b style="color:green"> OK </b>';
        } else {
            html += '<b style="color:red"> KO </b>';
        }
        html += '</td></tr></table>';
        console.log(html);
        resolve(html);
    });
});


var promTemp = new Promise((resolve, reject) => {
    exec(cmdTemp, function(error, stdout, stderr) {
        var html = '<b>' + stdout + '</b>';
        console.log(html);
        resolve(html);
    });
});



app.get('/', function (req, res) {
  //res.send('Hello World!');
  console.log(" in /");

  db.temp.getAll(function(vTemp){
    console.log('getall called');
    console.log(vTemp);
    res.render('pages/index', {temp:vTemp[0].value})
  });
  
  // Promise.all([promStatus, promTemp]).then((value) => {
  //   console.log("In promise all");
  //   var vStatus = value[0];
  //   var vTemp = value[1];
  //   var data = { status:vStatus, temp:vTemp};
  //   res.render('pages/index',data);
  // }).catch(raison => {
  //   res.render('pages/index');
  // });

});

app.listen(port, function () {
  console.log('Example app listening on port' + port +'!');
  task.start();
});
